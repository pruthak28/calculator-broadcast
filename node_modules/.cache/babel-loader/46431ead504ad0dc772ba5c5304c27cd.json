{"ast":null,"code":"var _jsxFileName = \"/Users/pruthakulkarni/ReactPractice/calculation-broadcast/src/components/Calculator.js\";\nimport React from \"react\";\nimport Button from \"./Button\";\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.arrNum = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    this.arrOps = [\"Clear\", \"Delete\", \"+\", \"-\", \"/\", \"*\", \"%\", \"=\"];\n    this.state = {\n      text: \"\",\n      invalid: \"\"\n    };\n\n    this.createButtons = arr => {\n      return arr.map(item => {\n        if (isNaN(item) && item.length === 1) return /*#__PURE__*/React.createElement(Button, {\n          key: item,\n          displayText: item,\n          addClass: \"btnOps\",\n          buttonClicked: this.performOperation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 16\n          }\n        });else return /*#__PURE__*/React.createElement(Button, {\n          key: item,\n          displayText: item,\n          buttonClicked: this.performOperation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 16\n          }\n        });\n      });\n    };\n\n    this.performOperation = (btnPressed, isOP) => {\n      if (this.state.invalid === \"\") {\n        switch (btnPressed) {\n          case \"Clear\":\n            this.setState({\n              text: \"\",\n              invalid: \"\"\n            });\n            break;\n\n          case \"Delete\":\n            let typedtext = this.state.text;\n            typedtext = typedtext.substring(0, typedtext.length - 1);\n            this.setState({\n              text: typedtext,\n              invalid: \"\"\n            });\n            break;\n\n          case \"=\":\n            // console.log(this.isOP(this.state.text.substring(this.state.text.lastIndexOf(\" \"), this.state.text.length).trim()));\n            // console.log(this.state.text.substring(0,this.state.text.lastIndexOf(\" \")));\n            if (this.isOP(this.state.text.substring(this.state.text.lastIndexOf(\" \"), this.state.text.length).trim())) this.setState({\n              text: this.state.text.substring(0, this.state.text.lastIndexOf(\" \")),\n              invalid: \"\"\n            });\n            let tokens;\n            setTimeout(() => {\n              tokens = this.state.text.split(\" \");\n\n              for (var i = 0; i < tokens.length; i++) tokens[i] = isNaN(tokens[i]) ? tokens[i] : Number(tokens[i]);\n\n              console.log(eval(tokens.join(\" \")));\n            }, 10);\n            break;\n\n          default:\n            if (this.state.text === \"\" && isOP) this.setState({\n              text: `0 ${btnPressed}`,\n              invalid: \"\"\n            });else {\n              if (isOP && this.isOP(this.state.text.substring(this.state.text.lastIndexOf(\" \"), this.state.text.length).trim())) {\n                this.setState({\n                  text: `${this.state.text.substring(0, this.state.text.length - 2)} ${btnPressed}`,\n                  invalid: \"\"\n                });\n              } else {\n                if (!isNaN(this.state.text.substring(this.state.text.length - 1, this.state.text.length)) && !isOP) this.setState({\n                  text: `${this.state.text}${btnPressed}`,\n                  invalid: \"\"\n                });else this.setState({\n                  text: `${this.state.text} ${btnPressed}`,\n                  invalid: \"\"\n                });\n              }\n            }\n            break;\n        }\n      } else {\n        this.setState({\n          text: this.state.invalid\n        });\n      }\n    };\n\n    this.isOP = operator => {\n      if (operator === \"+\" || operator === \"-\" || operator === \"*\" || operator === \"/\" || operator === \"%\") return true;else return false;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card outerCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"txtArea\",\n      placeholder: \"\",\n      rows: \"1\",\n      disabled: true,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mb-3 innerCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, this.createButtons(this.arrNum))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 18\n      }\n    }, this.createButtons(this.arrOps))))))));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/pruthakulkarni/ReactPractice/calculation-broadcast/src/components/Calculator.js"],"names":["React","Button","Calculator","Component","arrNum","arrOps","state","text","invalid","createButtons","arr","map","item","isNaN","length","performOperation","btnPressed","isOP","setState","typedtext","substring","lastIndexOf","trim","tokens","setTimeout","split","i","Number","console","log","eval","join","operator","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AAAA;AAAA;AAAA,SACtCC,MADsC,GAC7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAD6B;AAAA,SAEtCC,MAFsC,GAE7B,CAAC,OAAD,EAAS,QAAT,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAuC,GAAvC,CAF6B;AAAA,SAGtCC,KAHsC,GAG9B;AAACC,MAAAA,IAAI,EAAC,EAAN;AAAUC,MAAAA,OAAO,EAAC;AAAlB,KAH8B;;AAAA,SAKtCC,aALsC,GAKrBC,GAAD,IAAS;AAEvB,aAAOA,GAAG,CAACC,GAAJ,CAASC,IAAD,IAAQ;AACrB,YAAGC,KAAK,CAACD,IAAD,CAAL,IAAeA,IAAI,CAACE,MAAL,KAAgB,CAAlC,EACE,oBAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEF,IAAb;AAAmB,UAAA,WAAW,EAAEA,IAAhC;AAAsC,UAAA,QAAQ,EAAC,QAA/C;AAAwD,UAAA,aAAa,EAAE,KAAKG,gBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CADF,KAGE,oBAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEH,IAAb;AAAmB,UAAA,WAAW,EAAEA,IAAhC;AAAsC,UAAA,aAAa,EAAE,KAAKG,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OALM,CAAP;AAMD,KAbqC;;AAAA,SAetCA,gBAfsC,GAenB,CAACC,UAAD,EAAaC,IAAb,KAAqB;AACtC,UAAG,KAAKX,KAAL,CAAWE,OAAX,KAAuB,EAA1B,EACA;AACE,gBAAOQ,UAAP;AACE,eAAK,OAAL;AACE,iBAAKE,QAAL,CAAc;AAACX,cAAAA,IAAI,EAAC,EAAN;AAAUC,cAAAA,OAAO,EAAE;AAAnB,aAAd;AACA;;AACF,eAAK,QAAL;AACE,gBAAIW,SAAS,GAAG,KAAKb,KAAL,CAAWC,IAA3B;AACAY,YAAAA,SAAS,GAAGA,SAAS,CAACC,SAAV,CAAoB,CAApB,EAAuBD,SAAS,CAACL,MAAV,GAAiB,CAAxC,CAAZ;AACA,iBAAKI,QAAL,CAAc;AAACX,cAAAA,IAAI,EAACY,SAAN;AAAiBX,cAAAA,OAAO,EAAE;AAA1B,aAAd;AACA;;AACF,eAAK,GAAL;AACA;AACA;AACE,gBAAG,KAAKS,IAAL,CAAU,KAAKX,KAAL,CAAWC,IAAX,CAAgBa,SAAhB,CAA0B,KAAKd,KAAL,CAAWC,IAAX,CAAgBc,WAAhB,CAA4B,GAA5B,CAA1B,EAA4D,KAAKf,KAAL,CAAWC,IAAX,CAAgBO,MAA5E,EAAoFQ,IAApF,EAAV,CAAH,EACE,KAAKJ,QAAL,CAAc;AAACX,cAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBa,SAAhB,CAA0B,CAA1B,EAA4B,KAAKd,KAAL,CAAWC,IAAX,CAAgBc,WAAhB,CAA4B,GAA5B,CAA5B,CAAP;AAAsEb,cAAAA,OAAO,EAAE;AAA/E,aAAd;AAEF,gBAAIe,MAAJ;AACAC,YAAAA,UAAU,CAAC,MAAI;AACbD,cAAAA,MAAM,GAAG,KAAKjB,KAAL,CAAWC,IAAX,CAAgBkB,KAAhB,CAAsB,GAAtB,CAAT;;AACA,mBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,MAAM,CAACT,MAArB,EAA4BY,CAAC,EAA7B,EACEH,MAAM,CAACG,CAAD,CAAN,GAAYb,KAAK,CAACU,MAAM,CAACG,CAAD,CAAP,CAAL,GAAmBH,MAAM,CAACG,CAAD,CAAzB,GAA+BC,MAAM,CAACJ,MAAM,CAACG,CAAD,CAAP,CAAjD;;AACFE,cAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACP,MAAM,CAACQ,IAAP,CAAY,GAAZ,CAAD,CAAhB;AACD,aALS,EAKR,EALQ,CAAV;AAMA;;AACF;AACE,gBAAG,KAAKzB,KAAL,CAAWC,IAAX,KAAoB,EAApB,IAA0BU,IAA7B,EAAmC,KAAKC,QAAL,CAAc;AAACX,cAAAA,IAAI,EAAE,KAAIS,UAAW,EAAtB;AAAyBR,cAAAA,OAAO,EAAE;AAAlC,aAAd,EAAnC,KACK;AACH,kBAAGS,IAAI,IAAI,KAAKA,IAAL,CAAU,KAAKX,KAAL,CAAWC,IAAX,CAAgBa,SAAhB,CAA0B,KAAKd,KAAL,CAAWC,IAAX,CAAgBc,WAAhB,CAA4B,GAA5B,CAA1B,EAA4D,KAAKf,KAAL,CAAWC,IAAX,CAAgBO,MAA5E,EAAoFQ,IAApF,EAAV,CAAX,EAAmH;AAClH,qBAAKJ,QAAL,CAAc;AAACX,kBAAAA,IAAI,EAAE,GAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBa,SAAhB,CAA0B,CAA1B,EAA4B,KAAKd,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,GAAuB,CAAnD,CAAsD,IAAGE,UAAW,EAA7E;AAAgFR,kBAAAA,OAAO,EAAE;AAAzF,iBAAd;AACA,eAFD,MAGI;AACF,oBAAG,CAACK,KAAK,CAAC,KAAKP,KAAL,CAAWC,IAAX,CAAgBa,SAAhB,CAA0B,KAAKd,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,GAAuB,CAAjD,EAAoD,KAAKR,KAAL,CAAWC,IAAX,CAAgBO,MAApE,CAAD,CAAN,IAAuF,CAACG,IAA3F,EACE,KAAKC,QAAL,CAAc;AAACX,kBAAAA,IAAI,EAAE,GAAE,KAAKD,KAAL,CAAWC,IAAK,GAAES,UAAW,EAAtC;AAAyCR,kBAAAA,OAAO,EAAE;AAAlD,iBAAd,EADF,KAEK,KAAKU,QAAL,CAAc;AAACX,kBAAAA,IAAI,EAAE,GAAE,KAAKD,KAAL,CAAWC,IAAK,IAAGS,UAAW,EAAvC;AAA0CR,kBAAAA,OAAO,EAAE;AAAnD,iBAAd;AACN;AACF;AACD;AAnCJ;AAqCD,OAvCD,MAwCI;AACF,aAAKU,QAAL,CAAc;AAACX,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE;AAAlB,SAAd;AACD;AACF,KA3DqC;;AAAA,SA6DtCS,IA7DsC,GA6D9Be,QAAD,IAAc;AACnB,UAAGA,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,GAAjC,IAAwCA,QAAQ,KAAK,GAArD,IAA4DA,QAAQ,KAAK,GAAzE,IAAgFA,QAAQ,KAAK,GAAhG,EAAqG,OAAO,IAAP,CAArG,KACK,OAAO,KAAP;AACN,KAhEqC;AAAA;;AAkEtCC,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,WAAW,EAAC,EAFd;AAGE,MAAA,IAAI,EAAC,GAHP;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWC,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKE,aAAL,CAAmB,KAAKL,MAAxB,CADF,CADD,CADF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKK,aAAL,CAAmB,KAAKJ,MAAxB,CADH,CADF,CANF,CADD,CADF,CADF,CAVF,CADF;AAgCD;;AApGqC;;AAuGxC,eAAeH,UAAf","sourcesContent":["import React from \"react\";\nimport Button from \"./Button\";\n\nclass Calculator extends React.Component{\n  arrNum = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  arrOps = [\"Clear\",\"Delete\",\"+\",\"-\",\"/\",\"*\",\"%\", \"=\"];\n  state = {text:\"\", invalid:\"\"};\n\n  createButtons = (arr) => {\n\n    return arr.map((item)=>{\n      if(isNaN(item) && item.length === 1)\n        return <Button key={item} displayText={item} addClass=\"btnOps\" buttonClicked={this.performOperation}></Button>\n      else\n        return <Button key={item} displayText={item} buttonClicked={this.performOperation}></Button>\n    });\n  }\n\n  performOperation = (btnPressed, isOP) =>{\n    if(this.state.invalid === \"\")\n    {\n      switch(btnPressed){\n        case \"Clear\":\n          this.setState({text:\"\", invalid: \"\"});\n          break;\n        case \"Delete\":\n          let typedtext = this.state.text;\n          typedtext = typedtext.substring(0, typedtext.length-1);\n          this.setState({text:typedtext, invalid: \"\"});\n          break;\n        case \"=\":\n        // console.log(this.isOP(this.state.text.substring(this.state.text.lastIndexOf(\" \"), this.state.text.length).trim()));\n        // console.log(this.state.text.substring(0,this.state.text.lastIndexOf(\" \")));\n          if(this.isOP(this.state.text.substring(this.state.text.lastIndexOf(\" \"), this.state.text.length).trim()))\n            this.setState({text: this.state.text.substring(0,this.state.text.lastIndexOf(\" \")), invalid: \"\"});\n\n          let tokens;\n          setTimeout(()=>{\n            tokens = this.state.text.split(\" \");\n            for(var i=0;i<tokens.length;i++)\n              tokens[i] = isNaN(tokens[i]) ? tokens[i] : Number(tokens[i]);\n            console.log(eval(tokens.join(\" \")));\n          },10)\n          break;\n        default:\n          if(this.state.text === \"\" && isOP) this.setState({text:`0 ${btnPressed}`, invalid: \"\"});\n          else {\n            if(isOP && this.isOP(this.state.text.substring(this.state.text.lastIndexOf(\" \"), this.state.text.length).trim())  ){\n             this.setState({text:`${this.state.text.substring(0,this.state.text.length-2)} ${btnPressed}`, invalid: \"\"});\n            }\n            else{\n              if(!isNaN(this.state.text.substring(this.state.text.length-1, this.state.text.length)) && !isOP)\n                this.setState({text:`${this.state.text}${btnPressed}`, invalid: \"\"});\n              else this.setState({text:`${this.state.text} ${btnPressed}`, invalid: \"\"});\n            }\n          }\n          break;\n      }\n    }\n    else{\n      this.setState({text: this.state.invalid});\n    }\n  }\n\n  isOP = (operator) => {\n    if(operator === \"+\" || operator === \"-\" || operator === \"*\" || operator === \"/\" || operator === \"%\") return true;\n    else return false;\n  }\n\n  render(){\n\n    return(\n      <div className=\"card outerCard\">\n        <div className=\"card-header\">\n          <textarea\n            className=\"txtArea\"\n            placeholder=\"\"\n            rows=\"1\"\n            disabled\n            value={this.state.text}\n          ></textarea>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"card-text\">\n            <div className=\"card mb-3 innerCard\">\n             <div className=\"row no-gutters\">\n               <div className=\"col-md-6\">\n                <div className=\"card-body\">\n                 {this.createButtons(this.arrNum)}\n                </div>\n               </div>\n               <div className=\"col-md-6\">\n                 <div className=\"card-body\">\n                   {this.createButtons(this.arrOps)}\n                 </div>\n               </div>\n             </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}
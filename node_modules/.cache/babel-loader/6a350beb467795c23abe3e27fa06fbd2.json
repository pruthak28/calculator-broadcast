{"ast":null,"code":"var _jsxFileName = \"/Users/pruthakulkarni/ReactPractice/calculation-broadcast/src/components/SharedPanel.js\";\nimport React from 'react';\nimport Calculator from \"./Calculator\"; // import io from 'socket.io-client';\n// const socket = io(\"http://localhost:4000\");\n\nclass SharedPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      calc: \"\",\n      accumulatedCalc: []\n    };\n\n    this.onInputChange = event => {// socket.emit(\"sendMessageToServer\", event.target.value);\n    };\n\n    this.displayAllCalculations = () => {\n      return this.state.accumulatedCalc.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }\n        }, item);\n      });\n    };\n  }\n\n  componentDidMount() {// socket.on(\"messageFromServer\", (value)=>{\n    //   let arrCalc = [...this.state.accumulatedCalc, value];\n    //   if(arrCalc.length > 10){\n    //     arrCalc.splice(0,1);\n    //   }\n    //   this.setState({\"calc\":value, accumulatedCalc: arrCalc});\n    // });\n  }\n\n  componentWillUnmount() {// socket.emit(\"disconnect\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card broadcastCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Shared Panel\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body broadcastText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SharedPanel;","map":{"version":3,"sources":["/Users/pruthakulkarni/ReactPractice/calculation-broadcast/src/components/SharedPanel.js"],"names":["React","Calculator","SharedPanel","Component","state","calc","accumulatedCalc","onInputChange","event","displayAllCalculations","map","item","componentDidMount","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,eAAe,EAAE;AAA5B,KADgC;;AAAA,SAgBxCC,aAhBwC,GAgBvBC,KAAD,IAAW,CACzB;AACD,KAlBuC;;AAAA,SAoBxCC,sBApBwC,GAoBf,MAAK;AAC5B,aAAO,KAAKL,KAAL,CAAWE,eAAX,CAA2BI,GAA3B,CAAgCC,IAAD,IAAQ;AAC5C,4BAAO;AAAK,UAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBA,IAAjB,CAAP;AACD,OAFM,CAAP;AAGD,KAxBuC;AAAA;;AAExCC,EAAAA,iBAAiB,GAAE,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAE,CACpB;AACD;;AAYDC,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAUD;;AAtCuC;;AAyC1C,eAAeZ,WAAf","sourcesContent":["import React from 'react';\nimport Calculator from \"./Calculator\"\n// import io from 'socket.io-client';\n// const socket = io(\"http://localhost:4000\");\n\nclass SharedPanel extends React.Component {\n  state = {calc: \"\", accumulatedCalc: []};\n  componentDidMount(){\n    // socket.on(\"messageFromServer\", (value)=>{\n    //   let arrCalc = [...this.state.accumulatedCalc, value];\n    //   if(arrCalc.length > 10){\n    //     arrCalc.splice(0,1);\n    //   }\n    //   this.setState({\"calc\":value, accumulatedCalc: arrCalc});\n    // });\n  }\n\n  componentWillUnmount(){\n    // socket.emit(\"disconnect\");\n  }\n\n  onInputChange = (event) => {\n    // socket.emit(\"sendMessageToServer\", event.target.value);\n  }\n\n  displayAllCalculations = () =>{\n    return this.state.accumulatedCalc.map((item)=>{\n      return <div key={item}>{item}</div>\n    })\n  }\n\n  render(){\n\n    return (\n      <div className=\"card broadcastCard\">\n        <div className=\"card-header\">\n          Shared Panel\n        </div>\n        <div className=\"card-body broadcastText\">\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default SharedPanel;\n"]},"metadata":{},"sourceType":"module"}
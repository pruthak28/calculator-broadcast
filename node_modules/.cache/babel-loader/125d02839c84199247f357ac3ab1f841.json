{"ast":null,"code":"var _jsxFileName = \"/Users/pruthakulkarni/ReactPractice/calculation-broadcast/src/components/App.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nconst socket = io(\"http://localhost:4000\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      calc: \"\",\n      accumulatedCalc: []\n    };\n\n    this.onInputChange = event => {\n      socket.emit(\"sendMessageToServer\", event.target.value);\n    };\n\n    this.displayAllCalculations = () => {\n      return this.state.accumulatedCalc.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 14\n          }\n        }, item);\n      });\n    };\n  }\n\n  componentDidMount() {\n    socket.on(\"messageFromServer\", value => {\n      console.log([...this.state.accumulatedCalc, value]);\n      this.setState({\n        \"calc\": value,\n        accumulatedCalc: [...this.state.accumulatedCalc, value]\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    socket.emit(\"disconnect\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \"Hi React App\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"\",\n      value: this.state.calc,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, this.displayAllCalculations()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pruthakulkarni/ReactPractice/calculation-broadcast/src/components/App.js"],"names":["React","io","socket","App","Component","state","calc","accumulatedCalc","onInputChange","event","emit","target","value","displayAllCalculations","map","item","componentDidMount","on","console","log","setState","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAME,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,eAAe,EAAE;AAA5B,KADwB;;AAAA,SAahCC,aAbgC,GAafC,KAAD,IAAW;AACzBP,MAAAA,MAAM,CAACQ,IAAP,CAAY,qBAAZ,EAAmCD,KAAK,CAACE,MAAN,CAAaC,KAAhD;AACD,KAf+B;;AAAA,SAiBhCC,sBAjBgC,GAiBP,MAAK;AAC5B,aAAO,KAAKR,KAAL,CAAWE,eAAX,CAA2BO,GAA3B,CAAgCC,IAAD,IAAQ;AAC5C,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,IAAN,CAAP;AACD,OAFM,CAAP;AAGD,KArB+B;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAE;AACjBd,IAAAA,MAAM,CAACe,EAAP,CAAU,mBAAV,EAAgCL,KAAD,IAAS;AACtCM,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAG,KAAKd,KAAL,CAAWE,eAAf,EAAgCK,KAAhC,CAAZ;AACA,WAAKQ,QAAL,CAAc;AAAC,gBAAOR,KAAR;AAAeL,QAAAA,eAAe,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,eAAf,EAAgCK,KAAhC;AAAhC,OAAd;AACD,KAHD;AAID;;AAEDS,EAAAA,oBAAoB,GAAE;AACpBnB,IAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ;AACD;;AAYDY,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,EAAxB;AAA2B,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,IAA7C;AAAmD,MAAA,QAAQ,EAAE,KAAKE,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKK,sBAAL,EADH,CAHF,CADF;AAUD;;AAnC+B;;AAsClC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\nconst socket = io(\"http://localhost:4000\");\n\nclass App extends React.Component {\n  state = {calc: \"\", accumulatedCalc: []};\n  componentDidMount(){\n    socket.on(\"messageFromServer\", (value)=>{\n      console.log([...this.state.accumulatedCalc, value]);\n      this.setState({\"calc\":value, accumulatedCalc: [...this.state.accumulatedCalc, value]});\n    });\n  }\n\n  componentWillUnmount(){\n    socket.emit(\"disconnect\");\n  }\n\n  onInputChange = (event) => {\n    socket.emit(\"sendMessageToServer\", event.target.value);\n  }\n\n  displayAllCalculations = () =>{\n    return this.state.accumulatedCalc.map((item)=>{\n      return <div>{item}</div>\n    })\n  }\n\n  render(){\n\n    return (\n      <div>\n        Hi React App\n        <p><input type=\"text\" name=\"\" value={this.state.calc} onChange={this.onInputChange}/></p>\n        <div >\n          {this.displayAllCalculations()}\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}